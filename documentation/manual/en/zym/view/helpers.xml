<?xml version="1.0" encoding="UTF-8"?>
<section xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"
    xmlns:xi="http://www.w3.org/2001/XInclude" xml:lang="en" xml:id="zym.view.helpers" version="5.0">
    <title>View Helpers</title>

    <para>
        Zym provides view helpers under the <classname>Zym_View_Helper_*</classname>
        prefix.
    </para>
    
    <section xml:id="zym.view.helpers.getrequest">
        <title>GetRequest Helper</title>
        
        <para>
            The helper allows access to the request object (<classname>Zend_Controller_Response_Abstract</classname>) available within 
            <classname>Zend_Controller_Front</classname>. Retrieving the request
            object in the view is not recommended; however, this helper is provided
            as a convince.
        </para>
        
        <itemizedlist>
            <listitem><para>getRequest()</para></listitem>
        </itemizedlist>
    </section>
    
    <section xml:id="zym.view.helpers.getresponse">
        <title>GetResponse Helper</title>
        
        <para>
            Allows access to the response object (<classname>Zend_Controller_Response_Abstract</classname>) within 
            <classname>Zend_Controller_Front</classname>.
        </para>
        
        <itemizedlist>
            <listitem><para>getResponse()</para></listitem>
        </itemizedlist>        
    </section>
    
    <section xml:id="zym.view.helpers.getsession">
        <title>GetSession Helper</title>
        
        <para>
            This helper returns a <classname>Zend_Session_Namespace</classname>.
            A session should be started if <classname>Zend_Session</classname>
            strict is set. See <classname>Zend_Session_Namespace</classname> documentation
            for usage. (hint: usage is similar to it)
        </para>
        
        <itemizedlist>
            <listitem><para>getSession($namespace = 'Default', $singleInstance = false)</para></listitem>
        </itemizedlist>
    </section>
    
    <section xml:id="zym.view.helpers.navigation">
        <title>Navigation Helpers</title>
        
        <para>
            The navigation helpers are used in conjunction with
            <link xlink:href="#zym.navigation">Zym_Navigation</link>, and
            allows for easy-to-use rendering of menus, breadcrumbs and
            XML sitemaps.
        </para>
        
        <para>
            If a navigation container is not explicitly set in a helper using
            <code>$helper->setNavigation($nav)</code>, the helper will look
            for it in <classname>Zend_Registry</classname> with the key
            <code>Zym_Navigation</code>. This means that as long as you store
            a navigation container in the registry, you normally don't have to
            think about setting/getting it in the view helpers.
        </para>
        
        <para>
            If a navigation container is not explicitly set in a helper and
            nothing is found in <classname>Zend_Registry</classname>, the helper
            will create an empty <classname>Zym_Navigation</classname> object
            before rendering or when using <code>$helper->getNavigation()</code>.
            Combining this feature with the proxy feature shown below means that
            navigation view helpers can be used without being aware of the
            existence of any underlying <classname>Zym_Navigation</classname> objects.
        </para>
    
        <example xml:id="zym.view.helpers.navigation.proxy.example">
            <title>Proxying calls to the navigation container</title>
        
            <para>
                Navigation view helpers use the magic method <code>__call()</code>
                to proxy method calls to the navigation container that is
                registered in the view helper. This means that the following is
                possible in a view script, for instance:
            </para>
            
            <programlisting role="php"><xi:include href="helpers/example/navigation/proxy.php" parse="text" /></programlisting>
            
            <para>
                The menu helper is used in this example, but it could just as
                easily be using the breadcrumbs or sitemap view helper
            </para>
        </example>
        
        <section xml:id="zym.view.helpers.navigation.i18n">
            <title>Integration with Zend_Translate</title>
        
            <para>
                The navigation helpers support translating of page labels and titles.
                You can set a translator of type <classname>Zend_Translate</classname>
                or <classname>Zend_Translate_Adapter</classname> in the helper using
                <code>$helper->setTranslator($translator)</code>, or like with other
                I18n-enabled components; adding the translator to
                <classname>Zend_Registry</classname> using the key
                <code>Zend_Translate</code>, in which case it will be found by the
                helpers.
            </para>
            
            <para>
                If you want to disable translating, use <code>$helper->setUseTranslator(false)</code>.
            </para>
            
            <note>
                <para>
                    There is no translation in the sitemap helper, since there
                    are no page labels or titles involved in an XML sitemap.
                </para>
            </note>
        </section>
        
        <section xml:id="zym.view.helpers.navigation.acl">
            <title>Integration with ACL</title>
            
            <para>
                All navigation view helpers support ACL inherently from the
                class <classname>Zym_View_Helper_NavigationAbstract</classname>.
                A <classname>Zend_Acl</classname> object can be assigned to
                a helper instance with <code>$helper->setAcl($acl)</code>,
                where <code>$helper</code> refers to an instance of a helper,
                and <code>$acl</code> is an ACL instance containing roles
                and possibly resources. The helpers can be assigned a role 
                to use when iterating pages, by doing 
                <code>$helper->setRole('member')</code> to set a role id, or 
                <code>$helper->setRole(new Zend_Acl_Role('member'))</code> to set
                an instance. If ACL is used in the helper, the role in the
                helper must have rights for the page's resource and/or privilege
                to be included in a menu/breadcrumb/sitemap.
            </para>
            
            <para>
                The examples below all show how ACL affects rendering. 
            </para>
        </section>
    
        <section xml:id="zym.view.helpers.navigation.setup">
            <title>Navigation structure used in examples</title>
            
            <para>
                This shows an example setup of a navigation structure,
                including routes and ACL setup, that is used in the examples
                below.
            </para>
            
            <programlisting role="php"><xi:include href="helpers/example/navigation/setup.php" parse="text" /></programlisting>
        </section>
        
        <section xml:id="zym.view.helpers.navigation.breadcrumbs">
            <title>Breadcrumbs Helper</title>
            
            <para>
                Breadcrumbs are used to indicate where in a site structure
                a user is currently browsing, and typically is something
                along the lines of "You are here: Home > Products > FantasticProduct 1.0".
                The breadcrumbs helper follows the guidelines from
                <link xlink:href="http://developer.yahoo.com/ypatterns/pattern.php?pattern=breadcrumbs">Breadcrumbs Pattern - Yahoo! Design Pattern Library</link>,
                and allows customization or overriding of the suggested features. 
            </para>
            
            <para>
                The way the breadcrumbs helper works; it finds the deepest active
                page in a navigation structure, and renders an upwards path to
                the root. For MVC pages, the "activeness" of a page is
                determined by inspecting the request object, as stated in the
                section on <link xlink:href="#zym.navigation.pages.mvc">Zym_Navigation_Page_Mvc</link>.
            </para>
    
            <example xml:id="zym.view.helpers.navigation.breadcrumbs.example1">
                <title>Rendering breadcrumbs</title>
                
                <para>
                    This example shows how to render breadcrumbs with default
                    settings. The reason it doesn't output
                    <code>Page 5 > Page 5.1 > Page 5.1.1 > Page 5.12</code> is
                    because <code>Page 5</code> is not visible, and thus is left
                    out of the breadcrumbs iteration.
                </para>
                
                <programlisting role="php"><xi:include href="helpers/example/navigation/breadcrumbs_1.php" parse="text" /></programlisting>
            </example>
    
            <example xml:id="zym.view.helpers.navigation.breadcrumbs.example2">
                <title>Rendering customized breadcrumbs</title>
                
                <para>
                    This example shows how to render breadcrumbs with 
                    customized settings.
                </para>
                
                <programlisting role="php"><xi:include href="helpers/example/navigation/breadcrumbs_2.php" parse="text" /></programlisting>
            </example>
        </section>
        
        <section xml:id="zym.view.helpers.navigation.menu">
            <title>Menu Helper</title>
            
            <para>
                The menu helper is used for rendering navigation containers
                as an HTML menu, by using <code>ul</code> and <code>li</code>
                elements. How the HTML should be presented is easily configurable
                by using CSS.
            </para>
    
            <example xml:id="zym.view.helpers.navigation.menu.example1">
                <title>Rendering a menu</title>
                
                <para>
                    This example shows how to render a menu that is registered
                    in the view helper, either by 
                    <code>$helper->setNavigation($nav)</code> or retrieving
                    the object from <classname>Zend_Registry</classname>.
                </para>
                
                <para>
                    Notice how pages that are invisible or pages with 
                    ACL roles incompatible with the view helper are filtered
                    out.
                </para>
                
                <programlisting role="php"><xi:include href="helpers/example/navigation/menu_1.php" parse="text" /></programlisting>
            </example>
    
            <example xml:id="zym.view.helpers.navigation.menu.example2">
                <title>Rendering a custom menu</title>
                
                <para>
                    This example shows how to render a menu that is not
                    registered in the view helper.
                </para>
                
                <programlisting role="php"><xi:include href="helpers/example/navigation/menu_2.php" parse="text" /></programlisting>
            </example>
        </section>
        
        <section xml:id="zym.view.helpers.navigation.sitemap">
            <title>Sitemap Helper</title>
            
            <para>
                The sitemap helper is used for generating XML sitemaps, as 
                defined by the <link xlink:href="http://www.sitemaps.org/protocol.php">Sitemaps XML format</link>.
                XML sitemaps can be used to have detailed control of how a search engine
                should index your site.
            </para>
            
            <para>
                By default, the sitemap helper uses Zym's
                <link xlink:href="#zym.validate.sitemap">sitemap validators</link>
                to validate each element that is used. This can be disabled by
                calling <code>$helper->setUseSitemapValidators(false)</code>.
                
                <note>
                    <para>
                        If you disable sitemap validators, the custom properties (see table)
                        are not validated at all.
                    </para>
                </note>
            </para>
            

            
            <para>
                The sitemap helper also supports 
                <link xlink:href="http://www.sitemaps.org/schemas/sitemap/0.9/sitemap.xsd">Sitemap XSD Schema</link> 
                validation of the generated sitemap. This is disabled by default,
                since it will require a request to the Schema file. It can be
                enabled with 
                <code>$helper->setUseSchemaValidation(true)</code>.
            </para>
    
            <table xml:id="zym.view.helpers.navigation.sitemap.elements">
                <title>Sitemap XML elements</title>
                        
                <info>
                    <abstract>
                        <para>
                            The following elements/properties can be used for each
                            page in the sitemap. The only required element is the
                            <code>loc</code> element.
                        </para>
                    </abstract>
                </info>               
        
                <tgroup cols="2">
                    <thead>
                        <row>
                            <entry>Element</entry>
                            <entry>Description</entry>
                        </row>
                    </thead>
                    
                    <tbody>
                        <row>
                            <entry><code>loc</code></entry>
                            <entry>
                                Absolute URL to page. An absolute URL will
                                be generated by the helper.
                            </entry>
                        </row>
                        <row>
                            <entry><code>lastmod</code></entry>
                            <entry>
                                <para>
                                    The date of last modification of the file,
                                    in <link xlink:href="http://www.w3.org/TR/NOTE-datetime">W3C Datetime</link> format.
                                    This time portion can be omitted if desired, and only use YYYY-MM-DD.
                                </para>
                                <para>
                                    The helper will try to retrieve the
                                    <code>lastmod</code> value from the page's
                                    custom property <code>lastmod</code> if it
                                    is set in the page. If the value is not a
                                    valid date, it is ignored.
                                </para>
                            </entry>
                        </row>
                        <row>
                            <entry><code>changefreq</code></entry>
                            <entry>
                                <para>
                                    How frequently the page is likely to change. 
                                    This value provides general information to 
                                    search engines and may not correlate exactly 
                                    to how often they crawl the page. Valid 
                                    values are:
                                    <itemizedlist>
                                        <listitem><para>always</para></listitem>
                                        <listitem><para>hourly</para></listitem>
                                        <listitem><para>daily</para></listitem>
                                        <listitem><para>weekly</para></listitem>
                                        <listitem><para>monthly</para></listitem>
                                        <listitem><para>yearly</para></listitem>
                                        <listitem><para>never</para></listitem>
                                    </itemizedlist>
                                </para>
                                <para>
                                    The helper will try to retrieve the
                                    <code>changefreq</code> value from the page's
                                    custom property <code>changefreq</code> if it
                                    is set in the page. If the value is not 
                                    valid, it is ignored.
                                </para>
                            </entry>
                        </row>
                        <row>
                            <entry><code>priority</code></entry>
                            <entry>
                                <para>
                                    The priority of this URL relative to other 
                                    URLs on your site. Valid values range from 
                                    0.0 to 1.0. 
                                </para>
                                <para>
                                    The helper will try to retrieve the
                                    <code>priority</code> value from the page's
                                    custom property <code>priority</code> if it
                                    is set in the page. If the value is not 
                                    valid, it is ignored.
                                </para>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
    
            <example xml:id="zym.view.helpers.navigation.sitemap.example">
                <title>Rendering an XML sitemap</title>
                
                <para>
                    This example shows how to render an XML sitemap based
                    on the setup we did further up.
                </para>
                
                <programlisting role="php"><xi:include href="helpers/example/navigation/sitemap.php" parse="text" /></programlisting>
                
                <para>
                    Notice how pages that are invisible or pages with 
                    ACL roles incompatible with the view helper are filtered
                    out:
                </para>
                
                <programlisting role="xml"><xi:include href="helpers/example/navigation/sitemap.xml" parse="text" /></programlisting>
            </example>
            
        </section>
    </section>
    
    <section xml:id="zym.view.helpers.timesince">
        <title>TimeSince Helper</title>
        
        <para>
            This helper calculates the time passed from timestamps to generate a 
            formatted string like "5 days and 4 hours". Applications of this helper
            are generally seen in "Created 2 weeks ago" or "Last modified 5 minutes ago"
            type lines.
        </para>
        
        <para>
            Units supported are years, months, weeks, days, minutes, seconds. String format
            is the largest possible unit and if possible the unit below it. If a 1 year and 2 weeks
            have passed then "1 year" is the output; however, if 1 year, 2 months and 5 days have passed then
            "1 year and 2 months" is returned. If less than a second have passed then "less than a second" is 
            returned.
        </para>
        
        <para>
            Output is automatically translated if possible using <code>Zend_View_Helper_Translate</code>.
            The translation format is '%d months'. An already completed gettext pot file is located
            on Zym's demo in the data locale folder.
        </para>
        
        <itemizedlist>
            <listitem><para>timeSince($timestamp, $time = null)</para></listitem>
        </itemizedlist>
        
        <example xml:id="zym.view.helpers.timesince.example">
            <title>Using Zym_View_Helper_TimeSince</title>
            
            <programlisting role="php"><xi:include href="helpers/example/timesince.php" parse="text" /></programlisting>
        </example>
    </section>
    
    <section xml:id="zym.view.helpers.timeuntil">
        <title>TimeUntil Helper</title>
        
        <para>
            This helper calculates the time to an event from timestamps to generate a 
            formatted string like "5 days and 4 hours". It is similar to the TimeSince helper except applications of this helper
            are generally seen in "This event will start in 5 days and 4 hours" or "3 weeks before expiration"
            type lines.
        </para>
        
        <para>
            Units supported are years, months, weeks, days, minutes, seconds. String format
            is the largest possible unit and if possible the unit below it. If a 1 year and 2 weeks
            have passed then "1 year" is the output; however, if 1 year, 2 months and 5 days have passed then
            "1 year and 2 months" is returned. If less than a second have passed then "less than a second" is 
            returned.
        </para>
        
        <para>
            Output is automatically translated if possible using <code>Zend_View_Helper_Translate</code>.
            The translation format is '%d months'. An already completed gettext pot file is located
            on Zym's demo in the data locale folder.
        </para>
        
        <itemizedlist>
            <listitem><para>timeUntil($timestamp, $time = null)</para></listitem>
        </itemizedlist>
        
        <example xml:id="zym.view.helpers.timeuntil.example">
            <title>Using Zym_View_Helper_TimeUntil</title>
            
            <programlisting role="php"><xi:include href="helpers/example/timeuntil.php" parse="text" /></programlisting>
        </example>
    </section>
    
    <section xml:id="zym.view.helpers.xmldeclaration">
        <title>XmlDeclaration Helper</title>
        
        <para>
            The xml declaration helper generates xml declarations (<![CDATA[<?xml version="1.0" ?>]]>) just like its
            name suggests. Whenever you are using PHP for templates, you should
            use the xmlDeclaration helper because of inconsistencies between environments.
            You'll never know if short tags is enabled or not which can cause
            errors with xml declarations.
        </para>

        <itemizedlist>
            <listitem><para>xmlDeclaration($version = '1.0', $encoding = 'UTF-8', $standalone = null)</para></listitem>
        </itemizedlist>

        <example xml:id="zym.view.helpers.xmldeclaration.example">
            <title>Using Zym_View_Helper_XmlDeclaration</title>
            
            <programlisting role="php"><xi:include href="helpers/example/xmldeclaration.php" parse="text" /></programlisting>
        </example>
    </section>
</section>