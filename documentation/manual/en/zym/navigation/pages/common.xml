<?xml version="1.0" encoding="UTF-8"?>
<section xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"
    xmlns:xi="http://www.w3.org/2001/XInclude" xml:lang="en" xml:id="zym.navigation.pages.common" version="5.0">
    <title>Common page features</title>
    
    <para>
        All page classes must extend <classname>Zym_Navigation_Page</classname>,
        and will thus share a common set of features and properties. Most notably
        they share the options in the table below and the same initialization
        process.
    </para>
    
    <para>
        Option keys are mapped to <code>set</code> methods. This means that 
        the option <code>order</code> maps to the method <code>setOrder()</code>,
        and <code>reset_params</code> maps to the method
        <code>setResetParams()</code>. If there is no setter method for
        the option, it will be set as a custom property of the page.
    </para>
    
    <para>
        Read more on extending Zym_Navigation_Page in 
        <link xlink:href="#zym.navigation.pages.custom">Creating custom page types</link>.
    </para>
    
    <table xml:id="zym.navigation.pages.common.options">
        <title>Common page options</title>
               
        <info>
            <abstract>
                <para>
                    The options listed in the table are common 
                    to all page classes.
                </para>
            </abstract>
        </info>           

        <tgroup cols="4">
            <thead>
                <row>
                    <entry>Key</entry>
                    <entry>Type</entry>
                    <entry>Default</entry>
                    <entry>Description</entry>
                </row>
            </thead>
            
            <tbody>
                <row>
                    <entry><code>label</code></entry>
                    <entry><code>string</code></entry>
                    <entry><code>null</code></entry>
                    <entry>
                        A page label, such as Home or Blog.
                    </entry>
                </row>
                <row>
                    <entry><code>id</code></entry>
                    <entry><code>string</code> | <code>int</code></entry>
                    <entry><code>null</code></entry>
                    <entry>
                        An id tag/attribute that may be used for the page,
                        typically in an anchor element.
                    </entry>
                </row>
                <row>
                    <entry><code>class</code></entry>
                    <entry><code>string</code></entry>
                    <entry><code>null</code></entry>
                    <entry>
                        A CSS class that may be used for the page,
                        typically in an anchor element. 
                    </entry>
                </row>
                <row>
                    <entry><code>title</code></entry>
                    <entry><code>string</code></entry>
                    <entry><code>null</code></entry>
                    <entry>
                        A succinct page description, typically for using
                        as the <code>title</code> attribute in an anchor.
                    </entry>
                </row>
                <row>
                    <entry><code>target</code></entry>
                    <entry><code>string</code></entry>
                    <entry><code>null</code></entry>
                    <entry>
                        Specifies a target that may be used for the page,
                        typically in an anchor element.
                    </entry>
                </row>
                <row>
                    <entry><code>rel</code></entry>
                    <entry><code>array</code></entry>
                    <entry><code>array()</code></entry>
                    <entry>
                        Specifies forward relations for the page.
                        Each element in the array is a key-value pair, where the
                        key designates the relation/link type, and the value is 
                        a pointer to the linked page. An example of a key-value 
                        pair is <code>'alternate' => 'format/plain.html'</code>.
                        To allow full flexbility, there are no restrictions on 
                        relation values. The value does not have to be a string.
                        Read more about <code>rel</code> and <code>rev</code> in
                        <link xlink:href="#zym.view_helpers.navigation.acl">the
                        section on Zym_View_Helper_Navigation_Links.</link>.
                    </entry>
                </row>
                <row>
                    <entry><code>rev</code></entry>
                    <entry><code>array</code></entry>
                    <entry><code>array()</code></entry>
                    <entry>
                        Specifies reverse relations for the page. Works exactly
                        like <code>rel</code>.
                    </entry>
                </row>
                <row>
                    <entry><code>order</code></entry>
                    <entry><code>string</code> | <code>int</code> | <code>null</code></entry>
                    <entry><code>null</code></entry>
                    <entry>
                        Works like order for elements in Zend_Form. If specified,
                        the page will be iterated in a specific order, meaning
                        you can force a page to be iterated first by setting
                        order to a low number, e.g. -100. If a <code>string</code>
                        is given, it must parse to a valid <code>int</code>. If
                        <code>null</code> is given, it will be reset, meaning
                        the order in which the page was added to the container
                        will be used.
                    </entry>
                </row>
                <row>
                    <entry><code>resource</code></entry>
                    <entry><code>string</code> | <code>Zend_Acl_Resource_Interface</code> | <code>null</code></entry>
                    <entry><code>null</code></entry>
                    <entry>
                        ACL resource to associate with the page. Read more in
                        <link xlink:href="#zym.view_helpers.navigation.acl">the
                        section on ACL integration in view helpers.</link>.
                    </entry>
                </row>
                <row>
                    <entry><code>privilege</code></entry>
                    <entry><code>string</code> | <code>null</code></entry>
                    <entry><code>null</code></entry>
                    <entry>
                        ACL privilege to associate with the page. Read more in
                        <link xlink:href="#zym.view_helpers.navigation.acl">the
                        section on ACL integration in view helpers.</link>.
                    </entry>
                </row>
                <row>
                    <entry><code>active</code></entry>
                    <entry><code>bool</code></entry>
                    <entry><code>false</code></entry>
                    <entry>
                        Whether the page should be considered active for the 
                        current request. If active is false or not given, 
                        MVC pages will check its properties against the 
                        request object upon calling <code>$page->isActive()</code>.
                    </entry>
                </row>
                <row>
                    <entry><code>visible</code></entry>
                    <entry><code>bool</code></entry>
                    <entry><code>true</code></entry>
                    <entry>
                        Whether page should be visible for the user, or just
                        be a part of the structure. Invisible pages are skipped
                        by view helpers.
                    </entry>
                </row>
                <row>
                    <entry><code>pages</code></entry>
                    <entry><code>array</code> | <code>Zend_Config</code> | <code>null</code></entry>
                    <entry><code>null</code></entry>
                    <entry>
                        Sub pages of the page. This could be an <code>array</code>
                        or <code>Zend_Config</code> object containing either page
                        options that can be passed to the <code>factory()</code>
                        method, or actual <classname>Zym_Navigation_Page</classname>
                        instances, or a mixture of both. 
                    </entry>
                </row>
            </tbody>
        </tgroup>
    </table>
                
    <note>
        <title>Custom properties</title>
        <para>
            All pages support setting and getting of custom properties by
            using the magic methods <code>__set($name, $value)</code>,
            <code>__get($name)</code>, <code>__isset($name)</code> and
            <code>__unset($name)</code>. Custom properties can have any value,
            and will be included in the array that is returned from 
            <code>$page->toArray()</code>, which means that pages
            can be serialized/deserialized successfully even if the pages
            contains properties that are not native in the page class.
        </para>
        <para>
            Both native and custom properties can be set using
            <code>$page->set($name, $value)</code> and retrieved using
            <code>$page->get($name)</code>, or by using magic methods.
        </para>
    </note>
    
    <example xml:id="zym.navigation.pages.common.customprops">
        <title>Custom page properties</title>
        
        <para>
            This example shows how custom properties can be used.
        </para>
        
        <programlisting role="php"><xi:include href="common/example/customprops.php" parse="text" /></programlisting>
    </example>
</section>