<sect1 id="zym.controller.action.crud">
    <title>Zym_Controller_Action_Crud_Abstract</title>

    <para>
        This controller provides generic CRUD actions for a table defined by a <code>Zend_Db_Table_Abstract</code> instance.
    </para>

    <para>
        To set the controller up, you only need to create a controller that inherits
        from <code>Zym_Controller_Action_Crud_Abstract</code> and provide it with a <code>Zend_Form</code> and <code>Zend_Db_Table_Abstract</code> instance.
    </para>

    <programlisting role="php"><![CDATA[
class FooController extends Zym_Controller_Action_Crud_Abstract
{
    public function init()
    {
        $this->_setForm(new Foo_Form());
        $this->_setTable(new Foo_Table());
    }
}
]]></programlisting>

    <para>
        The index action redirects to the list action by default. Below is a short description of which actions are available and what view variables they set.
    </para>

    <programlisting role="php"><![CDATA[
listAction(): Provides an overview of available items.
This action assigns a variable called 'items' to the view, which is an instance of Zym_Paginate_DbTable.
You can alter the number of items per page with the 'limit' url parameter.
The page number can be set using the 'page' url parameter.
]]></programlisting>

    <programlisting role="php"><![CDATA[
viewAction(): A detail view for the selected row.
The action assigns a variable called 'row' to the view. This is the requested table row.
]]></programlisting>

    <programlisting role="php"><![CDATA[
addEditAction(): Creates a new entry, or edits an existing one depending on the primary id given.
If no primary id is given (default parameter: 'id') it will create a new row.
If an id is given, it will edit that row.
]]></programlisting>

    <programlisting role="php"><![CDATA[
deleteAction(): Deletes the selected row.
]]></programlisting>
</sect1>
<!--
vim:se ts=4 sw=4 et:
-->