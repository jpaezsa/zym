<?xml version="1.0" encoding="UTF-8"?>
<sect1 id="zym.notification.registering">
  <title>(Un)registering to a notification</title>

  <para>Registering to a notification is done at the
  Zym_Notification_Center:</para>

  <para>
	<programlisting role="php">
<![CDATA[
$center = Zym_Notification_Center::getInstance();
$center-&gt;attach($theReceivingObject, ‘testEvent’);
]]>
	</programlisting>
  </para>

  <para>In this snippet an object is attached to the testEvent notification.
  All posts that are sent to the ‘testEvent’ notification will be passed to
  the $receivingObject. By default the notifications will be posted to the
  notify() method. An optional third parameter in the attach() method allows
  you to use a custom method.</para>

  <para><programlisting role="php">
<![CDATA[
$center = Zym_Notification_Center::getInstance();
  $center-&gt;attach($theReceivingObject, ‘testEvent’, ‘customMethod’);
]]>
	</programlisting></para>

  <para>In this case, all ‘testEvent’ notifications will be posted to the
  customMethod() method in $theReceivingObject. There is a special attach
  method called attachCatchAll(). An object that is registered to the
  catch-all will receive all notifications. If you want to unregister an
  object from the notification center you can call the detach() method. This
  method takes one mandatory and one optional argument. The first argument is
  the object you want to detach. The second, optional, argument is the
  notification that you want to detach the object from. If the second argument
  is left blank, the notification center will remove the object from all
  notifications. If you want to detach an object from the catch-all you can
  call detachCatchAll(). Don’t forget to detach an object from the
  notification center when it’s destroyed! See the next section for an example
  of how to make sure this gets done. Receiving a notification By default the
  notifications are sent to the notify() method of the receiver.</para>

  <para><code> class MyClass { protected $_notificationCenter = null; public
  function __construct() { $this-&gt;_notificationCenter =
  Zym_Notification_Center::getInstance(); $this-&gt;_notificationCenter
  -&gt;attach($this, ‘testEvent’); } public function __destruct() {
  $this-&gt;_notificationCenter -&gt;detach($this); } public function
  notify(Zym_Notification $notification) { if ($notification-&gt;getName() ==
  ‘testEvent’) { Zend_Registry:get(‘log’)-&gt;log(‘testEvent was triggered and
  received by MyClass!’); } } } </code></para>

  <para>In the example above the MyClass instance is automatically registered
  to the ‘testEvent’ notification at instantiation. If and when the
  ‘testEvent’ notification is sent, the notify() method will receive it so it
  can be processed. Note the __destruct() method which explicitly detaches the
  object from the notification center.</para>
</sect1>